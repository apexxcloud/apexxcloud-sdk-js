{"version":3,"file":"sdk.min.js","sources":["../src/sdk.js"],"sourcesContent":["class StorageSDK {\n  constructor(config = {}) {\n    this.config = {\n      baseUrl: config.baseUrl || \"https://api.apexxcloud.com\",\n    };\n\n    // Initialize API clients\n    this.files = {\n      upload: this.uploadFile.bind(this),\n      uploadMultipart: this.uploadMultipart.bind(this),\n    };\n  }\n\n  async uploadFile(\n    signedUrl,\n    file,\n    {\n      onProgress = () => {},\n      onComplete = () => {},\n      onError = () => {},\n      onStart = () => {},\n    } = {}\n  ) {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      const xhr = new XMLHttpRequest();\n\n      // Setup progress tracking\n      xhr.upload.onprogress = (event) => {\n        if (event.lengthComputable) {\n          const percentComplete = (event.loaded / event.total) * 100;\n          onProgress({\n            loaded: event.loaded,\n            total: event.total,\n            progress: percentComplete,\n            type: \"progress\",\n          });\n        }\n      };\n\n      // Return promise for upload completion\n      return new Promise((resolve, reject) => {\n        xhr.open(\"POST\", signedUrl, true);\n\n        // Setup start handler\n        xhr.upload.onloadstart = (event) => {\n          onStart({\n            type: \"start\",\n            timestamp: new Date(),\n            file: {\n              name: file.name,\n              size: file.size,\n              type: file.type,\n            },\n          });\n        };\n\n        // Setup completion handler\n        xhr.onload = () => {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              const response = JSON.parse(xhr.responseText);\n              onComplete({\n                type: \"complete\",\n                response,\n                timestamp: new Date(),\n              });\n              resolve(response);\n            } catch (e) {\n              onComplete({\n                type: \"complete\",\n                response: xhr.responseText,\n                timestamp: new Date(),\n              });\n              resolve(xhr.responseText);\n            }\n          } else {\n            const error = new Error(`Upload failed with status ${xhr.status}`);\n            onError({\n              type: \"error\",\n              error,\n              status: xhr.status,\n              timestamp: new Date(),\n            });\n            reject(error);\n          }\n        };\n\n        // Setup error handler\n        xhr.onerror = (event) => {\n          const error = new Error(\"Upload failed\");\n          onError({\n            type: \"error\",\n            error,\n            originalEvent: event,\n            timestamp: new Date(),\n          });\n          reject(error);\n        };\n\n        // Setup abort handler\n        xhr.onabort = (event) => {\n          const error = new Error(\"Upload aborted\");\n          onError({\n            type: \"abort\",\n            error,\n            originalEvent: event,\n            timestamp: new Date(),\n          });\n          reject(error);\n        };\n\n        xhr.send(formData);\n      });\n    } catch (error) {\n      onError({\n        type: \"error\",\n        error,\n        timestamp: new Date(),\n      });\n      throw new Error(`Upload failed: ${error.message}`);\n    }\n  }\n}\n\nexport default StorageSDK;\n"],"names":["constructor","config","this","baseUrl","files","upload","uploadFile","bind","uploadMultipart","signedUrl","file","onProgress","onComplete","onError","onStart","formData","FormData","append","xhr","XMLHttpRequest","onprogress","event","lengthComputable","percentComplete","loaded","total","progress","type","Promise","resolve","reject","open","onloadstart","timestamp","Date","name","size","onload","status","response","JSON","parse","responseText","e","error","Error","onerror","originalEvent","onabort","send","message"],"mappings":"qPAAA,MACEA,WAAAA,CAAYC,EAAS,IACnBC,KAAKD,OAAS,CACZE,QAASF,EAAOE,SAAW,8BAI7BD,KAAKE,MAAQ,CACXC,OAAQH,KAAKI,WAAWC,KAAKL,MAC7BM,gBAAiBN,KAAKM,gBAAgBD,KAAKL,MAE/C,CAEA,gBAAMI,CACJG,EACAC,GACAC,WACEA,EAAaA,OAAQC,WACrBA,EAAaA,OAAQC,QACrBA,EAAUA,OAAQC,QAClBA,EAAUA,QACR,IAEJ,IACE,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQP,GAExB,MAAMQ,EAAM,IAAIC,eAgBhB,OAbAD,EAAIb,OAAOe,WAAcC,IACvB,GAAIA,EAAMC,iBAAkB,CAC1B,MAAMC,EAAmBF,EAAMG,OAASH,EAAMI,MAAS,IACvDd,EAAW,CACTa,OAAQH,EAAMG,OACdC,MAAOJ,EAAMI,MACbC,SAAUH,EACVI,KAAM,YAEV,GAIK,IAAIC,SAAQ,CAACC,EAASC,KAC3BZ,EAAIa,KAAK,OAAQtB,GAAW,GAG5BS,EAAIb,OAAO2B,YAAeX,IACxBP,EAAQ,CACNa,KAAM,QACNM,UAAW,IAAIC,KACfxB,KAAM,CACJyB,KAAMzB,EAAKyB,KACXC,KAAM1B,EAAK0B,KACXT,KAAMjB,EAAKiB,OAEb,EAIJT,EAAImB,OAAS,KACX,GAAInB,EAAIoB,QAAU,KAAOpB,EAAIoB,OAAS,IACpC,IACE,MAAMC,EAAWC,KAAKC,MAAMvB,EAAIwB,cAChC9B,EAAW,CACTe,KAAM,WACNY,WACAN,UAAW,IAAIC,OAEjBL,EAAQU,EACT,CAAC,MAAOI,GACP/B,EAAW,CACTe,KAAM,WACNY,SAAUrB,EAAIwB,aACdT,UAAW,IAAIC,OAEjBL,EAAQX,EAAIwB,aACd,KACK,CACL,MAAME,EAAQ,IAAIC,MAAM,6BAA6B3B,EAAIoB,UACzDzB,EAAQ,CACNc,KAAM,QACNiB,QACAN,OAAQpB,EAAIoB,OACZL,UAAW,IAAIC,OAEjBJ,EAAOc,EACT,GAIF1B,EAAI4B,QAAWzB,IACb,MAAMuB,EAAQ,IAAIC,MAAM,iBACxBhC,EAAQ,CACNc,KAAM,QACNiB,QACAG,cAAe1B,EACfY,UAAW,IAAIC,OAEjBJ,EAAOc,EAAM,EAIf1B,EAAI8B,QAAW3B,IACb,MAAMuB,EAAQ,IAAIC,MAAM,kBACxBhC,EAAQ,CACNc,KAAM,QACNiB,QACAG,cAAe1B,EACfY,UAAW,IAAIC,OAEjBJ,EAAOc,EAAM,EAGf1B,EAAI+B,KAAKlC,EAAS,GAErB,CAAC,MAAO6B,GAMP,MALA/B,EAAQ,CACNc,KAAM,QACNiB,QACAX,UAAW,IAAIC,OAEX,IAAIW,MAAM,kBAAkBD,EAAMM,UAC1C,CACF"}