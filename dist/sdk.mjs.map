{"version":3,"file":"sdk.mjs","sources":["../src/sdk.js"],"sourcesContent":["class StorageSDK {\n  constructor(config = {}) {\n    this.config = {\n      baseUrl: config.baseUrl || \"https://api.apexxcloud.com\",\n    };\n\n    // Initialize API clients\n    this.files = {\n      upload: this.uploadFile.bind(this),\n      uploadMultipart: this.uploadMultipart.bind(this),\n    };\n  }\n\n  async uploadFile(\n    signedUrl,\n    file,\n    {\n      onProgress = () => {},\n      onComplete = () => {},\n      onError = () => {},\n      onStart = () => {},\n    } = {}\n  ) {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      const xhr = new XMLHttpRequest();\n\n      // Setup progress tracking\n      xhr.upload.onprogress = (event) => {\n        if (event.lengthComputable) {\n          const percentComplete = (event.loaded / event.total) * 100;\n          onProgress({\n            loaded: event.loaded,\n            total: event.total,\n            progress: percentComplete,\n            type: \"progress\",\n          });\n        }\n      };\n\n      // Return promise for upload completion\n      return new Promise((resolve, reject) => {\n        xhr.open(\"POST\", signedUrl, true);\n\n        // Setup start handler\n        xhr.upload.onloadstart = (event) => {\n          onStart({\n            type: \"start\",\n            timestamp: new Date(),\n            file: {\n              name: file.name,\n              size: file.size,\n              type: file.type,\n            },\n          });\n        };\n\n        // Setup completion handler\n        xhr.onload = () => {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              const response = JSON.parse(xhr.responseText);\n              onComplete({\n                type: \"complete\",\n                response,\n                timestamp: new Date(),\n              });\n              resolve(response);\n            } catch (e) {\n              onComplete({\n                type: \"complete\",\n                response: xhr.responseText,\n                timestamp: new Date(),\n              });\n              resolve(xhr.responseText);\n            }\n          } else {\n            const error = new Error(`Upload failed with status ${xhr.status}`);\n            onError({\n              type: \"error\",\n              error,\n              status: xhr.status,\n              timestamp: new Date(),\n            });\n            reject(error);\n          }\n        };\n\n        // Setup error handler\n        xhr.onerror = (event) => {\n          const error = new Error(\"Upload failed\");\n          onError({\n            type: \"error\",\n            error,\n            originalEvent: event,\n            timestamp: new Date(),\n          });\n          reject(error);\n        };\n\n        // Setup abort handler\n        xhr.onabort = (event) => {\n          const error = new Error(\"Upload aborted\");\n          onError({\n            type: \"abort\",\n            error,\n            originalEvent: event,\n            timestamp: new Date(),\n          });\n          reject(error);\n        };\n\n        xhr.send(formData);\n      });\n    } catch (error) {\n      onError({\n        type: \"error\",\n        error,\n        timestamp: new Date(),\n      });\n      throw new Error(`Upload failed: ${error.message}`);\n    }\n  }\n}\n\nexport default StorageSDK;\n"],"names":["StorageSDK","constructor","config","baseUrl","files","upload","uploadFile","bind","uploadMultipart","signedUrl","file","onProgress","onComplete","onError","onStart","formData","FormData","append","xhr","XMLHttpRequest","onprogress","event","lengthComputable","percentComplete","loaded","total","progress","type","Promise","resolve","reject","open","onloadstart","timestamp","Date","name","size","onload","status","response","JSON","parse","responseText","e","error","Error","onerror","originalEvent","onabort","send","message"],"mappings":"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"}