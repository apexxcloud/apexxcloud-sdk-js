!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).ApexxCloudSDK=t()}(this,(function(){"use strict";return class{constructor(e={}){this.config={baseUrl:e.baseUrl||"https://api.apexxcloud.com"},this.files={upload:this.uploadFile.bind(this)}}async uploadFile(e,t,{onProgress:o=()=>{},onComplete:r=()=>{},onError:a=()=>{},onStart:s=()=>{},signal:n}={}){try{const p=new FormData;p.append("file",t);const i=new XMLHttpRequest;if(n&&(n.addEventListener("abort",(()=>{i.abort()})),n.aborted))throw a({type:"error",error:new Error("Upload aborted"),originalEvent:event,timestamp:new Date}),new Error("Upload aborted");return i.upload.onprogress=e=>{if(e.lengthComputable){const t=e.loaded/e.total*100;o({loaded:e.loaded,total:e.total,progress:t,type:"progress"})}},new Promise(((o,n)=>{i.open("POST",e,!0),i.upload.onloadstart=e=>{s({type:"start",timestamp:new Date,file:{name:t.name,size:t.size,type:t.type}})},i.onload=()=>{if(i.status>=200&&i.status<300)try{const e=JSON.parse(i.responseText);r({type:"complete",response:e,timestamp:new Date}),o(e)}catch(e){r({type:"complete",response:i.responseText,timestamp:new Date}),o(i.responseText)}else{const e=new Error(`Upload failed with status ${i.status}`);a({type:"error",error:e,status:i.status,timestamp:new Date}),n(e)}},i.onerror=e=>{const t=new Error("Upload failed");a({type:"error",error:t,originalEvent:e,timestamp:new Date}),n(t)},i.onabort=e=>{const t=new Error("Upload aborted");a({type:"abort",error:t,originalEvent:e,timestamp:new Date}),n(t)},i.send(p)}))}catch(e){throw a({type:"error",error:e,timestamp:new Date}),new Error(`Upload failed: ${e.message}`)}}}}));
//# sourceMappingURL=sdk.min.js.map
