!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).ApexxCloudSDK=t()}(this,(function(){"use strict";return class{constructor(e={}){this.config={baseUrl:e.baseUrl||"https://api.apexxcloud.com"},this.files={upload:this.uploadFile.bind(this),uploadMultipart:this.uploadMultipart.bind(this)}}async uploadFile(e,t,{onProgress:o=()=>{},onComplete:r=()=>{},onError:s=()=>{},onStart:a=()=>{}}={}){try{const n=new FormData;n.append("file",t);const p=new XMLHttpRequest;return p.upload.onprogress=e=>{if(e.lengthComputable){const t=e.loaded/e.total*100;o({loaded:e.loaded,total:e.total,progress:t,type:"progress"})}},new Promise(((o,i)=>{p.open("POST",e,!0),p.upload.onloadstart=e=>{a({type:"start",timestamp:new Date,file:{name:t.name,size:t.size,type:t.type}})},p.onload=()=>{if(p.status>=200&&p.status<300)try{const e=JSON.parse(p.responseText);r({type:"complete",response:e,timestamp:new Date}),o(e)}catch(e){r({type:"complete",response:p.responseText,timestamp:new Date}),o(p.responseText)}else{const e=new Error(`Upload failed with status ${p.status}`);s({type:"error",error:e,status:p.status,timestamp:new Date}),i(e)}},p.onerror=e=>{const t=new Error("Upload failed");s({type:"error",error:t,originalEvent:e,timestamp:new Date}),i(t)},p.onabort=e=>{const t=new Error("Upload aborted");s({type:"abort",error:t,originalEvent:e,timestamp:new Date}),i(t)},p.send(n)}))}catch(e){throw s({type:"error",error:e,timestamp:new Date}),new Error(`Upload failed: ${e.message}`)}}}}));
//# sourceMappingURL=sdk.min.js.map
