!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).ApexxCloudSDK=t()}(this,(function(){"use strict";return class{constructor(e={}){this.config={baseUrl:e.baseUrl||"https://api.apexxcloud.com"},this.files={upload:this.uploadFile.bind(this),uploadMultipart:this.uploadMultipart.bind(this)}}async uploadMultipart(e,t,{onProgress:r=()=>{},onPartComplete:a=()=>{},onComplete:s=()=>{},onError:o=()=>{},partSize:n=5242880,signal:p,concurrency:i=3}={}){try{const l=await t("start-multipart",{key:e.name,totalParts:Math.ceil(e.size/n),mimeType:e.type}),d=()=>new Promise(((t,r)=>{const a=new XMLHttpRequest;if(p?.aborted)return o({type:"abort",error:new Error("Upload aborted"),phase:"start",timestamp:new Date}),void r(new Error("Upload aborted"));a.open("POST",l),a.setRequestHeader("Content-Type","application/json"),a.onload=()=>{if(a.status>=200&&a.status<300)try{t(JSON.parse(a.responseText))}catch(e){const t=new Error("Invalid JSON response from start upload");o({type:"error",error:t,phase:"start",status:a.status,timestamp:new Date}),r(t)}else{let e;try{e=JSON.parse(a.responseText).message||`Start upload failed with status ${a.status}`}catch(t){e=a.responseText||`Start upload failed with status ${a.status}`}const t=new Error(e);o({type:"error",error:t,phase:"start",status:a.status,timestamp:new Date}),r(t)}},a.onerror=()=>{const e=new Error("Start upload failed");o({type:"error",error:e,phase:"start",timestamp:new Date}),r(e)},a.send(JSON.stringify({filename:e.name,contentType:e.type,size:e.size}))})),{uploadId:u}=await d(),m=Math.ceil(e.size/n),c=[];let w=0;const y=async s=>{const i=(s-1)*n,l=Math.min(i+n,e.size),d=e.slice(i,l),c=await t("uploadpart",{uploadId:u,partNumber:s,key:e.name,totalParts:m});return new Promise(((t,n)=>{const u=new XMLHttpRequest;p?.aborted?n(new Error("Upload aborted")):(u.upload.onprogress=t=>{if(t.lengthComputable){const a=t.loaded/t.total,o=(l-i)*a,n=(w+o)/e.size*100;r({loaded:w+o,total:e.size,progress:n,part:{number:s,progress:100*a}})}},u.open("POST",c),u.onload=()=>{if(u.status>=200&&u.status<300){const e=u.getResponseHeader("ETag");w+=d.size;const r={ETag:e,PartNumber:s};a(r),t(r)}else{let e;try{e=JSON.parse(u.responseText).message||`Part upload failed with status ${u.status}`}catch(t){e=u.responseText||`Part upload failed with status ${u.status}`}const t=new Error(e);o({type:"error",error:t,phase:"upload",partNumber:s,status:u.status,timestamp:new Date}),n(t)}},u.onerror=()=>n(new Error("Part upload failed")),u.send(d))}))};for(let e=0;e<m;e+=i){const t=Array.from({length:Math.min(i,m-e)},((t,r)=>e+r+1)),r=await Promise.all(t.map((e=>y(e))));c.push(...r)}const f=await t("completemultipart",{uploadId:u,key:e.name}),h=()=>new Promise(((t,r)=>{const a=new XMLHttpRequest;a.open("POST",f),a.setRequestHeader("Content-Type","application/json"),a.onload=()=>{if(a.status>=200&&a.status<300)try{const r=JSON.parse(a.responseText);s({type:"complete",response:r,timestamp:new Date,file:{name:e.name,size:e.size,type:e.type}}),t(r)}catch(e){const t=new Error("Invalid JSON response from complete upload");o({type:"error",error:t,phase:"complete",status:a.status,timestamp:new Date}),r(t)}else{let e;try{e=JSON.parse(a.responseText).message||`Complete upload failed with status ${a.status}`}catch(t){e=a.responseText||`Complete upload failed with status ${a.status}`}const t=new Error(e);o({type:"error",error:t,phase:"complete",status:a.status,timestamp:new Date}),r(t)}},a.onerror=()=>{const e=new Error("Complete upload failed");o({type:"error",error:e,phase:"complete",timestamp:new Date}),r(e)},a.send(JSON.stringify({parts:c.sort(((e,t)=>e.PartNumber-t.PartNumber))}))}));return await h()}catch(e){throw o({type:"error",error:e,phase:"upload",timestamp:new Date}),e}}async uploadFile(e,t,{onProgress:r=()=>{},onComplete:a=()=>{},onError:s=()=>{},onStart:o=()=>{},signal:n}={}){try{const p=await t("upload",{key:e.name,mimeType:e.type}),i=new XMLHttpRequest;if(n?.aborted)throw s({type:"abort",error:new Error("Upload aborted"),timestamp:new Date}),new Error("Upload aborted");return n?.addEventListener("abort",(()=>i.abort())),new Promise(((t,n)=>{i.open("PUT",p),i.upload.onprogress=e=>{if(e.lengthComputable){const t=e.loaded/e.total*100;r({loaded:e.loaded,total:e.total,progress:t,type:"progress"})}},i.upload.onloadstart=()=>{o({type:"start",timestamp:new Date,file:{name:e.name,size:e.size,type:e.type}})},i.onload=()=>{if(i.status>=200&&i.status<300)try{const r=JSON.parse(i.responseText);a({type:"complete",response:r,timestamp:new Date,file:{name:e.name,size:e.size,type:e.type}}),t(r)}catch(r){a({type:"complete",response:i.responseText,timestamp:new Date,file:{name:e.name,size:e.size,type:e.type}}),t(i.responseText)}else{const e=new Error(`Upload failed with status ${i.status}`);s({type:"error",error:e,status:i.status,timestamp:new Date}),n(e)}},i.onerror=()=>{const e=new Error("Upload failed");s({type:"error",error:e,timestamp:new Date}),n(e)},i.onabort=()=>{const e=new Error("Upload aborted");s({type:"abort",error:e,timestamp:new Date}),n(e)};const l=new FormData;l.append("file",e),i.send(l)}))}catch(e){throw s({type:"error",error:e,timestamp:new Date}),e}}}}));
//# sourceMappingURL=sdk.min.js.map
